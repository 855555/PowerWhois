package whoislib

import "regexp"

// WhoisInfoMatcher is a struct containing regular expressions that match WHOIS data.
type WhoisInfoMatcher struct {
	ReRegistrar                   *regexp.Regexp // ReRegistrar matches the registrar name.
	ReDomainStatus                *regexp.Regexp // ReDomainStatus matches the domain status.
	ReCreationDate                *regexp.Regexp // ReCreationDate matches the creation date.
	ReExpiryDate                  *regexp.Regexp // ReExpiryDate matches the expiration date.
	ReNameServer                  *regexp.Regexp // ReNameServer matches the name server.
	ReFree                        *regexp.Regexp // ReFree matches the free status.
	DateTimeLayout                string         // DateTimeLayout is the layout of the date and time strings.
	DateTimeLayoutForCreationDate string         // DateTimeLayoutForCreationDate is the layout of the creation date strings.
	DateTimeLayoutForExpiryDate   string         // DateTimeLayoutForExpiryDate is the layout of the expiration date strings.
}

// 使用正则表达式匹配 WHOIS 数据中的相关信息
var WhoisMatchers = map[string]WhoisInfoMatcher{
	"cn": {
		ReRegistrar:    regexp.MustCompile(`Sponsoring Registrar: (.*)`),
		ReDomainStatus: regexp.MustCompile(`Domain Status: (.*)`),
		ReCreationDate: regexp.MustCompile(`Registration Time: (.*)`),
		ReExpiryDate:   regexp.MustCompile(`Expiration Time: (.*)`),
		ReNameServer:   regexp.MustCompile(`Name Server: (.*)`),
		ReFree:         regexp.MustCompile(`^No matching record`),
	},
	"中国": {
		ReRegistrar:    regexp.MustCompile(`Sponsoring Registrar: (.*)`),
		ReDomainStatus: regexp.MustCompile(`Domain Status: (.*)`),
		ReCreationDate: regexp.MustCompile(`Registration Time: (.*)`),
		ReExpiryDate:   regexp.MustCompile(`Expiration Time: (.*)`),
		ReNameServer:   regexp.MustCompile(`Name Server: (.*)`),
		ReFree:         regexp.MustCompile(`^No matching record`),
	},
	"中國": {
		ReRegistrar:    regexp.MustCompile(`Sponsoring Registrar: (.*)`),
		ReDomainStatus: regexp.MustCompile(`Domain Status: (.*)`),
		ReCreationDate: regexp.MustCompile(`Registration Time: (.*)`),
		ReExpiryDate:   regexp.MustCompile(`Expiration Time: (.*)`),
		ReNameServer:   regexp.MustCompile(`Name Server: (.*)`),
		ReFree:         regexp.MustCompile(`^No matching record`),
	},
	"au": {
		ReRegistrar:    regexp.MustCompile(`Registrar Name: (.*)`),
		ReDomainStatus: regexp.MustCompile(`Status: (.*)`),
		ReCreationDate: regexp.MustCompile(`Creation Date: (.*)`),
		ReExpiryDate:   regexp.MustCompile(`Registry Expiry Date: (.*)`),
		ReNameServer:   regexp.MustCompile(`Name Server: (.*)`),
		ReFree:         regexp.MustCompile(`^Domain not found`),
	},
	"hk": {
		ReRegistrar:    regexp.MustCompile(`Registrar Name: (.*)`),
		ReDomainStatus: regexp.MustCompile(`Domain Status: (.*)`),
		ReCreationDate: regexp.MustCompile(`Domain Name Commencement Date: (.*)`),
		ReExpiryDate:   regexp.MustCompile(`Expiry Date: (.*)`),
		ReNameServer:   regexp.MustCompile(`Name Servers Information:\s*\n\n((?:.+\n)+)`),
		DateTimeLayout: "02-01-2006",
		ReFree:         regexp.MustCompile(`The domain has not been registered`),
	},
	"mo": {
		ReCreationDate: regexp.MustCompile(`Record created on (.*)`),
		ReExpiryDate:   regexp.MustCompile(`Record expires on (.*)`),
		ReNameServer:   regexp.MustCompile(`Domain name servers:\s*\n\s*-+\n((?:.+\n)+)`),
		ReFree:         regexp.MustCompile(`No match for `),
	},
	"ru": {
		ReRegistrar:    regexp.MustCompile(`registrar: (.*)`),
		ReDomainStatus: regexp.MustCompile(`state:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`created:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`paid-till:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`nserver:\s+(.*)`),
		ReFree:         regexp.MustCompile(`No entries found for the selected source`),
	},
	"su": {
		ReRegistrar:    regexp.MustCompile(`registrar: (.*)`),
		ReDomainStatus: regexp.MustCompile(`state:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`created:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`paid-till:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`nserver:\s+(.*)`),
		ReFree:         regexp.MustCompile(`No entries found for the selected source`),
	},
	"sg": {
		ReRegistrar:    regexp.MustCompile(`Registrar:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`Domain Status:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`Creation Date:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`Registry Expiry Date:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`Name Servers?:\s+(.*)`),
		ReFree:         regexp.MustCompile(`^Not found:`),
	},
	"so": {
		ReRegistrar:    regexp.MustCompile(`Registrar: (.*)`),
		ReDomainStatus: regexp.MustCompile(`Domain Status: (.*)`),
		ReCreationDate: regexp.MustCompile(`Creation Date: (.*)`),
		ReExpiryDate:   regexp.MustCompile(`Registry Expiry Date: (.*)`),
		ReNameServer:   regexp.MustCompile(`Name Server: (.*)`),
		ReFree:         regexp.MustCompile(`The queried object does not exist:`),
	},
	"tw": {
		ReRegistrar:    regexp.MustCompile(`Registration Service Provider: (.*)`),
		ReDomainStatus: regexp.MustCompile(`Domain Status: (.*)`),
		ReCreationDate: regexp.MustCompile(`Record created on ([0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2})`),
		ReExpiryDate:   regexp.MustCompile(`Record expires on ([0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2})`),
		ReNameServer:   regexp.MustCompile(`(?s)Domain servers in listed order:\n\s+(.*?)\n\n`),
		ReFree:         regexp.MustCompile(`^No Found`),
	},
	"us": {
		ReRegistrar:    regexp.MustCompile(`Registrar:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`Domain Status:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`Creation Date:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`Registry Expiry Date:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`Name Server:\s+(.*)`),
		ReFree:         regexp.MustCompile(`^No Data Found`),
	},
	"co": {
		ReRegistrar:    regexp.MustCompile(`Registrar:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`Domain Status:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`Creation Date:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`Registry Expiry Date:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`Name Server:\s+(.*)`),
		ReFree:         regexp.MustCompile(`^No Data Found`),
	},
	"kr": {
		ReRegistrar:    regexp.MustCompile(`Authorized Agency\s+:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`Registered Date\s+:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`Expiration Date\s+:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`\s+Host Name\s+:\s+(.*)`),
		DateTimeLayout: "2006. 01. 02.",
		ReFree:         regexp.MustCompile(`The requested domain was not found in the Registry`),
	},
	"im": {
		ReExpiryDate:   regexp.MustCompile(`Expiry Date:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`Name Server:(.*)`),
		DateTimeLayout: "02/01/2006 15:04:05",
		ReFree:         regexp.MustCompile(`The domain .* was not found`),
	},
	"ir": {
		ReNameServer: regexp.MustCompile(`nserver:\s+(.*)`),
		ReFree:       regexp.MustCompile(`No entries found in the selected source`),
	},
	"in": {
		ReRegistrar:    regexp.MustCompile(`Registrar:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`Domain Status:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`Creation Date:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`Registry Expiry Date:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`Name Server:\s+(.*)`),
		ReFree:         regexp.MustCompile(`^No Data Found`),
	},
	"tr": {
		ReRegistrar:    regexp.MustCompile(`Organization Name\s+:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`Domain Status:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`Created on..............:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`Expires on..............:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`\*\*\s+Domain Servers:\s*\n((?:.+\n)+)`),
		DateTimeLayout: "2006-Jan-02.",
		ReFree:         regexp.MustCompile(`^No match found for `),
	},
	"io": {
		ReRegistrar:    regexp.MustCompile(`Registrar:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`Domain Status:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`Creation Date:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`Registry Expiry Date:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`Name Server:\s+(.*)`),
		ReFree:         regexp.MustCompile(`^Domain not found`),
	},
	"me": {
		ReRegistrar:    regexp.MustCompile(`Registrar:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`Domain Status:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`Creation Date:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`Registry Expiry Date:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`Name Server:\s+(.*)`),
		ReFree:         regexp.MustCompile(`^Domain not found`),
	},
	"jp": {
		ReDomainStatus: regexp.MustCompile(`\[状態\]\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`\[登録年月日\]\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`\[有効期限\]\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`\[Name Server\]\s+(.*)`),
		DateTimeLayout: "2006/01/02",
		ReFree:         regexp.MustCompile(`No match!!`),
	},
	"by": {
		ReRegistrar:    regexp.MustCompile(`Registrar:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`Creation Date:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`Expiration Date:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`Name Server:\s+(.*)`),
		DateTimeLayout: "2006-01-02",
		ReFree:         regexp.MustCompile(`^object does not exist`),
	},
	"eu": {
		ReRegistrar:  regexp.MustCompile(`Registrar:\s*\n\s+Name:\s+(.*)`),
		ReNameServer: regexp.MustCompile(`Name servers:\s*\n\s+((?:.+\n)+)`),
		ReFree:       regexp.MustCompile(`Status:\s+AVAILABLE`),
	},
	"pl": {
		ReRegistrar:    regexp.MustCompile(`REGISTRAR:\s*\n(.*)`),
		ReCreationDate: regexp.MustCompile(`created:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`renewal date:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`nameservers:\s+((?:.+\n)+)created:`),
		ReFree:         regexp.MustCompile(`^No information available about domain name `),
	},
	"it": {
		ReRegistrar:    regexp.MustCompile(`Registrar\s*\n\s+Organization:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`Status:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`Created:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`Expire Date:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`Nameservers\s*\n\s+((?:.+\n)+)`),
		ReFree:         regexp.MustCompile(`Status:\s+AVAILABLE`),
	},
	"mx": {
		ReRegistrar:    regexp.MustCompile(`Registrar:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`Created On:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`Expiration Date:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`DNS:\s+(.*)`),
		ReFree:         regexp.MustCompile(`No_Se_Encontro_El_Objeto/Object_Not_Found`),
	},
	"ro": {
		ReRegistrar:    regexp.MustCompile(`Registrar:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`Domain Status:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`Registered On:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`Expires On:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`Nameserver:\s+(.*)`),
		ReFree:         regexp.MustCompile(`No entries found for the selected source`),
	},
	"se": {
		ReRegistrar:    regexp.MustCompile(`registrar:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`status:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`created:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`expires:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`nserver:\s+(.*)`),
		ReFree:         regexp.MustCompile(`domain ".*" not found`),
	},
	"dk": {
		ReRegistrar:    regexp.MustCompile(`Registrar:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`Domain Status:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`Registered:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`Expires:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`Hostname:\s+(.*)`),
		ReFree:         regexp.MustCompile(`No entries found for the selected source`),
	},
	"be": {
		ReRegistrar:    regexp.MustCompile(`Registrar:\s*\n\s*Name:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`Flags:\s*\n\s*((?:.+\n)+)`),
		ReCreationDate: regexp.MustCompile(`Registered:\s*(.*)`),
		ReNameServer:   regexp.MustCompile(`Nameservers:\s*\n\s*((?:.+\n)+)`),
		DateTimeLayout: "Mon Jan 2 2006",
		ReFree:         regexp.MustCompile(`Status:\s+AVAILABLE`),
	},
	"at": {
		ReRegistrar:    regexp.MustCompile(`registrar:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`nserver:\s+.*\nchanged:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`nserver:\s+(.*)`),
		// DateTimeLayout: "20060102 15:04:05",
		ReFree: regexp.MustCompile(`% nothing found`),
	},
	"lu": {
		ReRegistrar:    regexp.MustCompile(`registrar-name:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`domaintype:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`nserver:\s+(.*)`),
		ReFree:         regexp.MustCompile(`% No such domain`),
	},
	"qa": {
		ReRegistrar:    regexp.MustCompile(`Registrar Name:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`Status:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`Name Server:\s+(.*)`),
		ReFree:         regexp.MustCompile(`^No Data Found|^Reserved by QDR`),
	},
	"ie": {
		ReRegistrar:    regexp.MustCompile(`Registrar:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`Domain Status:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`Creation Date:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`Registry Expiry Date:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`Name Server:\s+(.*)`),
		ReFree:         regexp.MustCompile(`^Not found:`),
	},
	"af": {
		ReRegistrar:    regexp.MustCompile(`Registrar:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`Domain Status:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`Creation Date:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`Registry Expiry Date:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`Name Server:\s+(.*)`),
		ReFree:         regexp.MustCompile(`The queried object does not exist:`),
	},
	"bn": {
		ReRegistrar:    regexp.MustCompile(`Registrar:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`Domain Status:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`Creation Date:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`Expiration Date:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`Name Servers:\s*\n\s+((?:.+\n)+)`),
		DateTimeLayout: "02-Jan-2006 15:04:05",
		ReFree:         regexp.MustCompile(`^Domain Not Found`),
	},
	"bh": {
		ReRegistrar:    regexp.MustCompile(`Registrar:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`Domain Status:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`Creation Date:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`Registry Expiry Date:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`Name Server:\s+(.*)`),
		ReFree:         regexp.MustCompile(`^The queried object does not exist:\s+DOMAIN NOT FOUND`),
	},
	"sa": {
		ReNameServer: regexp.MustCompile(`Name Servers:\s*\n((?:.+\n)+)`),
		ReFree:       regexp.MustCompile(`No Match for `),
	},
	"ee": {
		ReRegistrar:    regexp.MustCompile(`Registrar:\s*\nname:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`status:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`registered:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`expire:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`nserver:\s+(.*)`),
		ReFree:         regexp.MustCompile(`Domain not found`),
	},
	"sk": {
		ReRegistrar:    regexp.MustCompile(`Registrar:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`Domain Status:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`Created:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`Valid Until:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`Nameserver:\s+(.*)`),
		ReFree:         regexp.MustCompile(`Domain not found`),
	},
	"kn": {
		ReRegistrar:    regexp.MustCompile(`Registrar:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`Domain Status:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`Creation Date:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`Registry Expiry Date:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`Name Server:\s+(.*)`),
		ReFree:         regexp.MustCompile(`The queried object does not exist:\s+No Object Found`),
	},
	"lt": {
		ReRegistrar:    regexp.MustCompile(`Registrar:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`Status:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`Registered:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`Expires:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`Nameserver:\s+(.*)`),
		ReFree:         regexp.MustCompile(`Status:\s+available`),
	},
	"lv": {
		ReRegistrar:    regexp.MustCompile(`\[Registrar\]\s*\n\s+Type:.*\s*\n\s+Name:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`Status:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`Nserver:\s+(.*)`),
		ReFree:         regexp.MustCompile(`Status:\s+free`),
	},
	"om": {
		ReRegistrar:  regexp.MustCompile(`Registrar:\s+(.*)`),
		ReNameServer: regexp.MustCompile(`Name Server:\s+(.*)`),
		ReFree:       regexp.MustCompile(`^No Data Found`),
	},
	"sc": {
		ReRegistrar:    regexp.MustCompile(`Registrar:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`Domain Status:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`Creation Date:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`Registry Expiry Date:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`Name Server:\s+(.*)`),
		ReFree:         regexp.MustCompile(`^Domain not found`),
	},
	"ag": {
		ReRegistrar:    regexp.MustCompile(`Registrar:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`Domain Status:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`Creation Date:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`Registry Expiry Date:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`Name Server:\s+(.*)`),
		ReFree:         regexp.MustCompile(`^Domain not found`),
	},
	"cl": {
		ReRegistrar:    regexp.MustCompile(`Registrar name:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`Creation date:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`Expiration date:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`Name server:\s+(.*)`),
		DateTimeLayout: "2006-01-02 15:04:05 MST",
		ReFree:         regexp.MustCompile(`no entries found`),
	},
	"mk": {
		ReRegistrar:                 regexp.MustCompile(`registrar:\s+(.*)`),
		ReCreationDate:              regexp.MustCompile(`registered:\s+(.*)`),
		ReExpiryDate:                regexp.MustCompile(`expire:\s+(.*)`),
		ReNameServer:                regexp.MustCompile(`nserver:\s+(.*)`),
		DateTimeLayout:              "02.01.2006 15:04:05",
		DateTimeLayoutForExpiryDate: "02.01.2006",
		ReFree:                      regexp.MustCompile(`% No entries found`),
	},
	"gg": {
		ReRegistrar:                   regexp.MustCompile(`Registrar:\s*\n\s+(.*)`),
		ReCreationDate:                regexp.MustCompile(`Registered on (.*)`),
		ReNameServer:                  regexp.MustCompile(`Name servers:\s*\n((?:.+\n)+)`),
		DateTimeLayoutForCreationDate: "2 January 2006 at 15:04:05.000",
		ReFree:                        regexp.MustCompile(`^NOT FOUND`),
	},
	"ng": {
		ReRegistrar:    regexp.MustCompile(`Registrar:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`Domain Status:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`Creation Date:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`Registry Expiry Date:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`Name Server:\s+(.*)`),
		ReFree:         regexp.MustCompile(`Domain Status:\s+No Object Found`),
	},
	"do": {
		ReRegistrar:    regexp.MustCompile(`Registrar:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`Domain Status:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`Creation Date:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`Registry Expiry Date:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`Name Server:\s+(.*)`),
		ReFree:         regexp.MustCompile(`Domain Status:\s+No Object Found`),
	},
	"am": {
		ReRegistrar:    regexp.MustCompile(`Registrar:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`Status:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`Registered:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`Expires:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`DNS servers:\s*\n((?:.+\n)+)`),
		ReFree:         regexp.MustCompile(`No match`),
	},
	"rs": {
		ReRegistrar:    regexp.MustCompile(`Registrar:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`Domain status:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`Registration date:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`Expiration date:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`DNS:\s+(.*)`),
		DateTimeLayout: "02.01.2006 15:04:05",
		ReFree:         regexp.MustCompile(`Domain is not registered`),
	},
	"bg": {
		ReDomainStatus: regexp.MustCompile(`registration status:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`NAME SERVER INFORMATION:\s*\n((?:.+\n)+)`),
		ReFree:         regexp.MustCompile(`registration status:\s+available`),
	},
	"hr": {
		ReRegistrar:    regexp.MustCompile(`Registrar:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`Creation Date:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`Registrar Registration Expiration Date:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`Name Server:\s+(.*)`),
		ReFree:         regexp.MustCompile(`%ERROR:\s+No entries found`),
	},
	"mn": {
		ReRegistrar:    regexp.MustCompile(`Registrar:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`Domain Status:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`Creation Date:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`Registry Expiry Date:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`Name Server:\s+(.*)`),
		ReFree:         regexp.MustCompile(`^Domain not found`),
	},
	"ae": {
		ReRegistrar:    regexp.MustCompile(`Registrar Name:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`Status:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`Name Server:\s+(.*)`),
		ReFree:         regexp.MustCompile(`^No Data Found|^Domain .* has been reserved by aeDA Regulator`),
	},
	"th": {
		ReRegistrar:    regexp.MustCompile(`Registrar:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`Status:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`Created date:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`Exp date:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`Name Server:\s+(.*)`),
		DateTimeLayout: "02 Jan 2006",
		ReFree:         regexp.MustCompile(`% No match found`),
	},
	"hu": {
		ReCreationDate: regexp.MustCompile(`record created:\s+(.*)`),
		ReFree:         regexp.MustCompile(`No match`),
	},
	"md": {
		ReDomainStatus: regexp.MustCompile(`Domain state\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`Registered on\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`Expires    on\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`Nameserver\s+(.*)`),
		ReFree:         regexp.MustCompile(`^No match for`),
	},
	"kz": {
		ReRegistrar:    regexp.MustCompile(`Current Registar:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`Domain status :\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`Domain created:\s+(.*)\(.*`),
		ReNameServer:   regexp.MustCompile(`server\.+:\s+(.*)`),
		DateTimeLayout: "2006-01-02 15:04:05",
		ReFree:         regexp.MustCompile(`Nothing found for this query`),
	},
	"pe": {
		ReRegistrar:    regexp.MustCompile(`Sponsoring Registrar:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`Domain Status:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`Name Server:\s+(.*)`),
		ReFree:         regexp.MustCompile(`Domain Status:\s+No Object Found`),
	},
	"my": {
		ReRegistrar:    regexp.MustCompile(`Registrar:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`Domain Status:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`Creation Date:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`Registry Expiry Date:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`Name Server:\s+(.*)`),
		ReFree:         regexp.MustCompile(`Domain .* is available for registration`),
	},
	"ws": {
		ReRegistrar:    regexp.MustCompile(`Registrar:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`Domain Status:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`Creation Date:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`Registrar Registration Expiration Date:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`Name Server:\s+(.*)`),
		ReFree:         regexp.MustCompile(`^The queried object does not exist:`),
	},
	"fi": {
		ReRegistrar:    regexp.MustCompile(`registrar\.+:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`status\.+:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`created\.+:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`expires\.+:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`nserver\.+:\s+(.*)`),
		DateTimeLayout: "2.1.2006 15:04:05",
		ReFree:         regexp.MustCompile(`Domain not found`),
	},
	"il": {
		ReRegistrar:    regexp.MustCompile(`registrar name:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`status:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`assigned:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`validity:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`nserver:\s+(.*)`),
		DateTimeLayout: "02-01-2006",
		ReFree:         regexp.MustCompile(`% No data was found to match the request criteria`),
	},
	"za": {
		ReRegistrar:    regexp.MustCompile(`Registrar:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`Domain Status:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`Creation Date:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`Registry Expiry Date:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`Name Server:\s+(.*)`),
		ReFree:         regexp.MustCompile(`No information was found matching that query`),
	},
	"pt": {
		ReRegistrar:    regexp.MustCompile(`Admin Name:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`Domain Status:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`Creation Date:\s+(.*)`),
		ReExpiryDate:   regexp.MustCompile(`Expiration Date:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`Name Server:\s+(.*)`),
		DateTimeLayout: "02/01/2006 15:04:05",
		ReFree:         regexp.MustCompile(`No Match`),
	},
	"de": {
		ReDomainStatus: regexp.MustCompile(`Status:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`Nserver:\s+(.*)`),
		ReFree:         regexp.MustCompile(`Status:\s+free`),
	},
	"nz": {
		ReRegistrar:    regexp.MustCompile(`Registrar:\s+(.*)`),
		ReDomainStatus: regexp.MustCompile(`Domain Status:\s+(.*)`),
		ReCreationDate: regexp.MustCompile(`Creation Date:\s+(.*)`),
		ReNameServer:   regexp.MustCompile(`Name Server:\s+(.*)`),
		ReFree:         regexp.MustCompile(`^Not found:`),
	},
}
